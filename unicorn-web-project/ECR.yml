AWSTemplateFormatVersion: '2010-09-09'
################################################################################
#
#   DESCRIPTION
#
################################################################################

#
################################################################################

################################################################################
#
#   RESOURCES
#
################################################################################
Resources:
  rECRRepor:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: hello-server

  rECRReporParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: ECR Repository
      Name: ecr-repo-name
      Type: String
      Value: !Ref rECRRepor

  rECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/hello-server

  rTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: hello-server
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/hello-server
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/hello-server
              awslogs-region: eu-west-1
              awslogs-stream-prefix: ecs
      Family: hello-server
      NetworkMode: bridge
      Memory: 256
      RequiresCompatibilities:
        - EC2

  rTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: hello-server-tg
      TargetType: instance
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /ping
      HealthCheckTimeoutSeconds: 3
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      VpcId: !Sub '{{resolve:ssm:vpc}}'
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '5'

  rListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref rTargetGroup
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/hello/*"
      ListenerArn: !Sub '{{resolve:ssm:public-lb-listener}}'
      Priority: 10

  rECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      ServiceName: hello-server
      Cluster: !Sub '{{resolve:ssm:ecs-cluster-arn}}'
      DesiredCount: 2
      LaunchType: EC2
      LoadBalancers:
        - ContainerName: hello-server
          ContainerPort: 80
          TargetGroupArn: !Ref rTargetGroup
      SchedulingStrategy: REPLICA
      HealthCheckGracePeriodSeconds: 8
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      TaskDefinition: !Ref rTaskDefinition

  rCodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /codebuild/hello-server

  # rCodeBuildServiceRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: 2012-10-17
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - codebuild.amazonaws.com
  #           Action:
  #             - sts:AssumeRole
  #     ManagedPolicyArns:
  #       - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser

  rCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole 
      Description: Permission to execute AWS CodePipeline
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser 
      Policies:
        - PolicyName: pipeline-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # - Sid: AllowCodeCommitActions
              #   Effect: 'Allow'
              #   Action:
              #     - 'codecommit:UploadArchive'
              #     - 'codecommit:GetCommit'
              #     - 'codecommit:GetBranch'
              #     - 'codecommit:GitPull'
              #     - 'codecommit:GetUploadArchiveStatus'
              #   Resource:
              #     - !GetAtt rCodeCommitRepository.Arn
              - Sid: AllowS3Actions
                Effect: 'Allow'
                Action:
                  - 'codecommit:UploadArchive'
                  - 's3:PutObject'
                  - 's3:GetObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${rS3ArtifactBucket}'
                  - !Sub 'arn:aws:s3:::${rS3ArtifactBucket}/*'
              - Sid: AllowCodeBuildActions
                Effect: 'Allow'
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource:
                  - '*'
              - Sid: AllowCodeDeployActions
                Effect: 'Allow'
                Action:
                  - 'ecs:*'
                Resource:
                  - '*'
              - Sid: AllowCWLogsActions
                Effect: 'Allow'
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:codebuild/hello-server:log-stream:*'